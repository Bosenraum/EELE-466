-- -------------------------------------------------------------
-- 

-- File Name: C:\EE466\AJR\Lab 3\hdl_coder_Madgwick_correction\codegen\Madgwick_correction\hdlsrc\Madgwick_correction_fixpt.vhd
-- Created: 2018-02-09 13:29:37
-- 
-- Generated by MATLAB 9.3, MATLAB Coder 3.4 and HDL Coder 3.11
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- r0                            ce_out        1
-- r1                            ce_out        1
-- r2                            ce_out        1
-- r3                            ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Madgwick_correction_fixpt
-- Source Path: Madgwick_correction_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.Madgwick_correction_fixpt_pac.ALL;

ENTITY Madgwick_correction_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        q0                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        q1                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        q2                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        q3                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        ax                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        ay                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        az                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        mx                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        my                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        mz                                :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En14
        ce_out                            :   OUT   std_logic;
        r0                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_En8
        r1                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_En7
        r2                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_En7
        r3                                :   OUT   std_logic_vector(13 DOWNTO 0)  -- sfix14_En7
        );
END Madgwick_correction_fixpt;


ARCHITECTURE rtl OF Madgwick_correction_fixpt IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL q2_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp                              : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_1                            : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL q1_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL q3_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_2                            : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_3                            : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_4                            : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_5                            : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_6                            : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL q0_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_7                            : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_8                            : unsigned(29 DOWNTO 0);  -- ufix30_En28
  SIGNAL tmp_9                            : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_10                           : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_11                           : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_12                           : signed(20 DOWNTO 0);  -- sfix21_En14
  SIGNAL ax_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_13                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_14                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_15                           : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_16                           : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_17                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_18                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_19                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_20                           : unsigned(29 DOWNTO 0);  -- ufix30_En28
  SIGNAL tmp_21                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_22                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_23                           : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_24                           : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL tmp_25                           : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL ay_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_26                           : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_27                           : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_28                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL mx_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_29                           : unsigned(29 DOWNTO 0);  -- ufix30_En28
  SIGNAL tmp_30                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_31                           : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL tmp_32                           : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL p858tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL p858tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL tmp_33                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL my_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_34                           : unsigned(29 DOWNTO 0);  -- ufix30_En28
  SIGNAL tmp_35                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL mz_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_36                           : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_37                           : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_38                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_39                           : unsigned(29 DOWNTO 0);  -- ufix30_En28
  SIGNAL tmp_40                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_41                           : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_42                           : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_43                           : unsigned(27 DOWNTO 0);  -- ufix28_En27
  SIGNAL tmp_44                           : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_45                           : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_46                           : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_47                           : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL multiplier_cast                  : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp              : signed(29 DOWNTO 0);  -- sfix30_En27
  SIGNAL tmp_48                           : signed(28 DOWNTO 0);  -- sfix29_En27
  SIGNAL tmp_49                           : signed(30 DOWNTO 0);  -- sfix31_En27
  SIGNAL tmp_50                           : unsigned(27 DOWNTO 0);  -- ufix28_En27
  SIGNAL tmp_51                           : signed(30 DOWNTO 0);  -- sfix31_En27
  SIGNAL tmp_52                           : signed(30 DOWNTO 0);  -- sfix31_En27
  SIGNAL tmp_53                           : signed(33 DOWNTO 0);  -- sfix34_En28
  SIGNAL tmp_54                           : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_55                           : signed(33 DOWNTO 0);  -- sfix34_En28
  SIGNAL tmp_56                           : signed(33 DOWNTO 0);  -- sfix34_En28
  SIGNAL tmp_57                           : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL tmp_58                           : unsigned(27 DOWNTO 0);  -- ufix28_En27
  SIGNAL tmp_59                           : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL tmp_60                           : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL tmp_61                           : signed(37 DOWNTO 0);  -- sfix38_En28
  SIGNAL tmp_62                           : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_63                           : signed(37 DOWNTO 0);  -- sfix38_En28
  SIGNAL tmp_64                           : signed(37 DOWNTO 0);  -- sfix38_En28
  SIGNAL tmp_65                           : signed(52 DOWNTO 0);  -- sfix53_En41
  SIGNAL tmp_66                           : unsigned(41 DOWNTO 0);  -- ufix42_En41
  SIGNAL tmp_67                           : signed(52 DOWNTO 0);  -- sfix53_En41
  SIGNAL tmp_68                           : signed(52 DOWNTO 0);  -- sfix53_En41
  SIGNAL tmp_69                           : signed(54 DOWNTO 0);  -- sfix55_En41
  SIGNAL tmp_70                           : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_71                           : signed(54 DOWNTO 0);  -- sfix55_En41
  SIGNAL tmp_72                           : signed(54 DOWNTO 0);  -- sfix55_En41
  SIGNAL tmp_73                           : signed(56 DOWNTO 0);  -- sfix57_En41
  SIGNAL tmp_74                           : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_75                           : signed(56 DOWNTO 0);  -- sfix57_En41
  SIGNAL tmp_76                           : signed(56 DOWNTO 0);  -- sfix57_En41
  SIGNAL tmp_77                           : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL tmp_78                           : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_79                           : unsigned(29 DOWNTO 0);  -- ufix30_En28
  SIGNAL tmp_80                           : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_81                           : unsigned(27 DOWNTO 0);  -- ufix28_En27
  SIGNAL tmp_82                           : unsigned(27 DOWNTO 0);  -- ufix28_En27
  SIGNAL tmp_83                           : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_84                           : signed(28 DOWNTO 0);  -- sfix29_En28
  SIGNAL tmp_85                           : signed(30 DOWNTO 0);  -- sfix31_En28
  SIGNAL tmp_86                           : unsigned(27 DOWNTO 0);  -- ufix28_En27
  SIGNAL tmp_87                           : signed(30 DOWNTO 0);  -- sfix31_En28
  SIGNAL tmp_88                           : signed(30 DOWNTO 0);  -- sfix31_En28
  SIGNAL tmp_89                           : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL tmp_90                           : unsigned(27 DOWNTO 0);  -- ufix28_En27
  SIGNAL tmp_91                           : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL tmp_92                           : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL tmp_93                           : signed(34 DOWNTO 0);  -- sfix35_En28
  SIGNAL tmp_94                           : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_95                           : signed(34 DOWNTO 0);  -- sfix35_En28
  SIGNAL tmp_96                           : signed(34 DOWNTO 0);  -- sfix35_En28
  SIGNAL tmp_97                           : signed(49 DOWNTO 0);  -- sfix50_En41
  SIGNAL tmp_98                           : unsigned(41 DOWNTO 0);  -- ufix42_En41
  SIGNAL tmp_99                           : signed(49 DOWNTO 0);  -- sfix50_En41
  SIGNAL tmp_100                          : signed(49 DOWNTO 0);  -- sfix50_En41
  SIGNAL tmp_101                          : signed(51 DOWNTO 0);  -- sfix52_En41
  SIGNAL tmp_102                          : unsigned(41 DOWNTO 0);  -- ufix42_En41
  SIGNAL tmp_103                          : signed(51 DOWNTO 0);  -- sfix52_En41
  SIGNAL tmp_104                          : signed(51 DOWNTO 0);  -- sfix52_En41
  SIGNAL tmp_105                          : signed(53 DOWNTO 0);  -- sfix54_En41
  SIGNAL tmp_106                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_107                          : signed(53 DOWNTO 0);  -- sfix54_En41
  SIGNAL tmp_108                          : signed(53 DOWNTO 0);  -- sfix54_En41
  SIGNAL tmp_109                          : signed(55 DOWNTO 0);  -- sfix56_En41
  SIGNAL tmp_110                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_111                          : signed(55 DOWNTO 0);  -- sfix56_En41
  SIGNAL tmp_112                          : signed(55 DOWNTO 0);  -- sfix56_En41
  SIGNAL tmp_113                          : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL tmp_114                          : unsigned(27 DOWNTO 0);  -- ufix28_En27
  SIGNAL tmp_115                          : unsigned(27 DOWNTO 0);  -- ufix28_En27
  SIGNAL tmp_116                          : unsigned(29 DOWNTO 0);  -- ufix30_En28
  SIGNAL tmp_117                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_118                          : unsigned(29 DOWNTO 0);  -- ufix30_En28
  SIGNAL tmp_119                          : unsigned(29 DOWNTO 0);  -- ufix30_En28
  SIGNAL tmp_120                          : signed(30 DOWNTO 0);  -- sfix31_En28
  SIGNAL tmp_121                          : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL tmp_122                          : unsigned(27 DOWNTO 0);  -- ufix28_En27
  SIGNAL tmp_123                          : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL tmp_124                          : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL tmp_125                          : signed(34 DOWNTO 0);  -- sfix35_En28
  SIGNAL tmp_126                          : unsigned(27 DOWNTO 0);  -- ufix28_En27
  SIGNAL tmp_127                          : signed(34 DOWNTO 0);  -- sfix35_En28
  SIGNAL tmp_128                          : signed(34 DOWNTO 0);  -- sfix35_En28
  SIGNAL tmp_129                          : signed(36 DOWNTO 0);  -- sfix37_En28
  SIGNAL tmp_130                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_131                          : signed(36 DOWNTO 0);  -- sfix37_En28
  SIGNAL tmp_132                          : signed(36 DOWNTO 0);  -- sfix37_En28
  SIGNAL tmp_133                          : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL tmp_134                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_135                          : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL tmp_136                          : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL tmp_137                          : signed(53 DOWNTO 0);  -- sfix54_En41
  SIGNAL tmp_138                          : unsigned(41 DOWNTO 0);  -- ufix42_En41
  SIGNAL tmp_139                          : signed(53 DOWNTO 0);  -- sfix54_En41
  SIGNAL tmp_140                          : signed(53 DOWNTO 0);  -- sfix54_En41
  SIGNAL tmp_141                          : signed(55 DOWNTO 0);  -- sfix56_En41
  SIGNAL tmp_142                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_143                          : signed(55 DOWNTO 0);  -- sfix56_En41
  SIGNAL tmp_144                          : signed(55 DOWNTO 0);  -- sfix56_En41
  SIGNAL tmp_145                          : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL tmp_146                          : signed(27 DOWNTO 0);  -- sfix28_En22
  SIGNAL tmp_147                          : signed(28 DOWNTO 0);  -- sfix29_En22
  SIGNAL tmp_148                          : signed(27 DOWNTO 0);  -- sfix28_En22
  SIGNAL tmp_149                          : signed(28 DOWNTO 0);  -- sfix29_En22
  SIGNAL tmp_150                          : signed(28 DOWNTO 0);  -- sfix29_En22
  SIGNAL tmp_151                          : std_logic;
  SIGNAL y_y                              : signed(14 DOWNTO 0);  -- sfix15_En11
  SIGNAL y_y_1                            : signed(14 DOWNTO 0);  -- sfix15_En11
  SIGNAL tmp_153                          : signed(14 DOWNTO 0);  -- sfix15_En11
  SIGNAL tmp_154                          : unsigned(13 DOWNTO 0);  -- ufix14_En12
  SIGNAL tmp_155                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_156                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_157                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_158                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_159                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_160                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_161                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_162                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_163                          : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_164                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_165                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL multiplier_cast_1                : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL multiplier_mul_temp_1            : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_166                          : signed(32 DOWNTO 0);  -- sfix33_En26
  SIGNAL tmp_167                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_168                          : signed(30 DOWNTO 0);  -- sfix31_En25
  SIGNAL tmp_169                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_170                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_171                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_172                          : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL tmp_173                          : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL p842tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL p842tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_174                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_175                          : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_176                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_177                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_178                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_179                          : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_180                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_181                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_182                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_183                          : unsigned(27 DOWNTO 0);  -- ufix28_En28
  SIGNAL tmp_184                          : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_185                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_186                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL multiplier_cast_2                : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL multiplier_mul_temp_2            : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL tmp_187                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL tmp_188                          : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL multiplier_cast_3                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL multiplier_mul_temp_3            : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL tmp_189                          : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_190                          : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL tmp_191                          : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL tmp_192                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_193                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_194                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_195                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_196                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_197                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_198                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_199                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_200                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_201                          : unsigned(28 DOWNTO 0);  -- ufix29_En26
  SIGNAL tmp_202                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_203                          : signed(32 DOWNTO 0);  -- sfix33_En25
  SIGNAL tmp_204                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_205                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_206                          : signed(37 DOWNTO 0);  -- sfix38_En26
  SIGNAL tmp_207                          : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL tmp_208                          : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL p853tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL p853tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL tmp_209                          : signed(20 DOWNTO 0);  -- sfix21_En14
  SIGNAL tmp_210                          : signed(20 DOWNTO 0);  -- sfix21_En14
  SIGNAL tmp_211                          : signed(35 DOWNTO 0);  -- sfix36_En27
  SIGNAL tmp_212                          : signed(36 DOWNTO 0);  -- sfix37_En27
  SIGNAL multiplier_cast_4                : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL multiplier_mul_temp_4            : signed(34 DOWNTO 0);  -- sfix35_En27
  SIGNAL tmp_213                          : signed(33 DOWNTO 0);  -- sfix34_En27
  SIGNAL tmp_214                          : signed(36 DOWNTO 0);  -- sfix37_En27
  SIGNAL tmp_215                          : signed(36 DOWNTO 0);  -- sfix37_En27
  SIGNAL tmp_216                          : signed(64 DOWNTO 0);  -- sfix65_En51
  SIGNAL multiplier_cast_5                : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_5            : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_217                          : signed(27 DOWNTO 0);  -- sfix28_En25
  SIGNAL tmp_218                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_219                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_220                          : signed(63 DOWNTO 0);  -- sfix64_En51
  SIGNAL tmp_221                          : signed(64 DOWNTO 0);  -- sfix65_En51
  SIGNAL tmp_222                          : signed(64 DOWNTO 0);  -- sfix65_En51
  SIGNAL tmp_223                          : signed(66 DOWNTO 0);  -- sfix67_En52
  SIGNAL multiplier_cast_6                : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_6            : signed(29 DOWNTO 0);  -- sfix30_En26
  SIGNAL tmp_224                          : signed(28 DOWNTO 0);  -- sfix29_En26
  SIGNAL tmp_225                          : signed(29 DOWNTO 0);  -- sfix30_En26
  SIGNAL multiplier_cast_7                : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_7            : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_226                          : signed(27 DOWNTO 0);  -- sfix28_En25
  SIGNAL tmp_227                          : signed(29 DOWNTO 0);  -- sfix30_En26
  SIGNAL tmp_228                          : signed(29 DOWNTO 0);  -- sfix30_En26
  SIGNAL tmp_229                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_230                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_231                          : signed(63 DOWNTO 0);  -- sfix64_En52
  SIGNAL tmp_232                          : signed(66 DOWNTO 0);  -- sfix67_En52
  SIGNAL tmp_233                          : signed(66 DOWNTO 0);  -- sfix67_En52
  SIGNAL tmp_234                          : signed(67 DOWNTO 0);  -- sfix68_En52
  SIGNAL tmp_235                          : unsigned(27 DOWNTO 0);  -- ufix28_En26
  SIGNAL tmp_236                          : signed(37 DOWNTO 0);  -- sfix38_En26
  SIGNAL tmp_237                          : signed(37 DOWNTO 0);  -- sfix38_En26
  SIGNAL multiplier_cast_8                : signed(28 DOWNTO 0);  -- sfix29_En26
  SIGNAL multiplier_mul_temp_8            : signed(66 DOWNTO 0);  -- sfix67_En52
  SIGNAL tmp_238                          : signed(65 DOWNTO 0);  -- sfix66_En52
  SIGNAL tmp_239                          : signed(67 DOWNTO 0);  -- sfix68_En52
  SIGNAL tmp_240                          : signed(67 DOWNTO 0);  -- sfix68_En52
  SIGNAL tmp_241                          : signed(13 DOWNTO 0);  -- sfix14_En8
  SIGNAL r0_tmp                           : signed(13 DOWNTO 0);  -- sfix14_En8
  SIGNAL tmp_242                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_243                          : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_244                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_245                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_246                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_247                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_248                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_249                          : signed(20 DOWNTO 0);  -- sfix21_En14
  SIGNAL tmp_250                          : signed(20 DOWNTO 0);  -- sfix21_En14
  SIGNAL tmp_251                          : signed(20 DOWNTO 0);  -- sfix21_En14
  SIGNAL tmp_252                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_253                          : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL tmp_254                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_255                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_256                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_257                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_258                          : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL tmp_259                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_260                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_261                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_262                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_263                          : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL tmp_264                          : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL tmp_265                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_266                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_267                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_268                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_269                          : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL az_unsigned                      : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL tmp_270                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_271                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_272                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_273                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_274                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_275                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_276                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_277                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_278                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL multiplier_cast_9                : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL multiplier_mul_temp_9            : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_279                          : signed(32 DOWNTO 0);  -- sfix33_En26
  SIGNAL tmp_280                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_281                          : signed(30 DOWNTO 0);  -- sfix31_En25
  SIGNAL tmp_282                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_283                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_284                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_285                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_286                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_287                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_288                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_289                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_290                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_291                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL multiplier_cast_10               : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL multiplier_mul_temp_10           : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL tmp_292                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL tmp_293                          : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL multiplier_cast_11               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL multiplier_mul_temp_11           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL tmp_294                          : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_295                          : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL tmp_296                          : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL tmp_297                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_298                          : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL p854tmp_cast                     : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL tmp_299                          : signed(13 DOWNTO 0);  -- sfix14_En10
  SIGNAL tmp_300                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_301                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_302                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_303                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_304                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_305                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_306                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_307                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_308                          : unsigned(28 DOWNTO 0);  -- ufix29_En26
  SIGNAL tmp_309                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_310                          : signed(32 DOWNTO 0);  -- sfix33_En25
  SIGNAL tmp_311                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_312                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_313                          : signed(37 DOWNTO 0);  -- sfix38_En26
  SIGNAL multiplier_cast_12               : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL multiplier_mul_temp_12           : signed(35 DOWNTO 0);  -- sfix36_En27
  SIGNAL tmp_314                          : signed(34 DOWNTO 0);  -- sfix35_En27
  SIGNAL tmp_315                          : signed(35 DOWNTO 0);  -- sfix36_En27
  SIGNAL multiplier_cast_13               : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL multiplier_mul_temp_13           : signed(34 DOWNTO 0);  -- sfix35_En27
  SIGNAL tmp_316                          : signed(33 DOWNTO 0);  -- sfix34_En27
  SIGNAL tmp_317                          : signed(35 DOWNTO 0);  -- sfix36_En27
  SIGNAL tmp_318                          : signed(35 DOWNTO 0);  -- sfix36_En27
  SIGNAL tmp_319                          : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL tmp_320                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_321                          : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL tmp_322                          : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL multiplier_cast_14               : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL multiplier_mul_temp_14           : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL tmp_323                          : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL tmp_324                          : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL tmp_325                          : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL tmp_326                          : signed(64 DOWNTO 0);  -- sfix65_En51
  SIGNAL multiplier_cast_15               : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_15           : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_327                          : signed(27 DOWNTO 0);  -- sfix28_En25
  SIGNAL tmp_328                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_329                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_330                          : signed(63 DOWNTO 0);  -- sfix64_En51
  SIGNAL tmp_331                          : signed(64 DOWNTO 0);  -- sfix65_En51
  SIGNAL tmp_332                          : signed(64 DOWNTO 0);  -- sfix65_En51
  SIGNAL tmp_333                          : signed(66 DOWNTO 0);  -- sfix67_En52
  SIGNAL tmp_334                          : unsigned(27 DOWNTO 0);  -- ufix28_En26
  SIGNAL tmp_335                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL multiplier_cast_16               : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_16           : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_336                          : signed(27 DOWNTO 0);  -- sfix28_En25
  SIGNAL tmp_337                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL tmp_338                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL tmp_339                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_340                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_341                          : signed(64 DOWNTO 0);  -- sfix65_En52
  SIGNAL tmp_342                          : signed(66 DOWNTO 0);  -- sfix67_En52
  SIGNAL tmp_343                          : signed(66 DOWNTO 0);  -- sfix67_En52
  SIGNAL tmp_344                          : signed(69 DOWNTO 0);  -- sfix70_En52
  SIGNAL tmp_345                          : unsigned(27 DOWNTO 0);  -- ufix28_En26
  SIGNAL tmp_346                          : signed(28 DOWNTO 0);  -- sfix29_En26
  SIGNAL tmp_347                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL multiplier_cast_17               : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_17           : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL tmp_348                          : signed(27 DOWNTO 0);  -- sfix28_En24
  SIGNAL tmp_349                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL tmp_350                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL tmp_351                          : signed(37 DOWNTO 0);  -- sfix38_En26
  SIGNAL tmp_352                          : signed(37 DOWNTO 0);  -- sfix38_En26
  SIGNAL tmp_353                          : signed(68 DOWNTO 0);  -- sfix69_En52
  SIGNAL tmp_354                          : signed(69 DOWNTO 0);  -- sfix70_En52
  SIGNAL tmp_355                          : signed(69 DOWNTO 0);  -- sfix70_En52
  SIGNAL tmp_356                          : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL r1_tmp                           : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_357                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_358                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_359                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_360                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_361                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_362                          : signed(20 DOWNTO 0);  -- sfix21_En14
  SIGNAL tmp_363                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_364                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_365                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_366                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_367                          : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL tmp_368                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_369                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_370                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_371                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_372                          : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL tmp_373                          : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL tmp_374                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_375                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_376                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_377                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_378                          : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL tmp_379                          : unsigned(15 DOWNTO 0);  -- ufix16_En12
  SIGNAL tmp_380                          : unsigned(13 DOWNTO 0);  -- ufix14_En11
  SIGNAL tmp_381                          : signed(14 DOWNTO 0);  -- sfix15_En11
  SIGNAL tmp_382                          : signed(14 DOWNTO 0);  -- sfix15_En11
  SIGNAL p801tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL p801tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL tmp_383                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_384                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_385                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_386                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_387                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_388                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_389                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_390                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_391                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL multiplier_cast_18               : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL multiplier_mul_temp_18           : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_392                          : signed(32 DOWNTO 0);  -- sfix33_En26
  SIGNAL tmp_393                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_394                          : signed(30 DOWNTO 0);  -- sfix31_En25
  SIGNAL tmp_395                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_396                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_397                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_398                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_399                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_400                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_401                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_402                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_403                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_404                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL multiplier_cast_19               : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL multiplier_mul_temp_19           : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL tmp_405                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL tmp_406                          : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL multiplier_cast_20               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL multiplier_mul_temp_20           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL tmp_407                          : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_408                          : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL tmp_409                          : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL tmp_410                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_411                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_412                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_413                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_414                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_415                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_416                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_417                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_418                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_419                          : unsigned(28 DOWNTO 0);  -- ufix29_En26
  SIGNAL tmp_420                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_421                          : signed(32 DOWNTO 0);  -- sfix33_En25
  SIGNAL tmp_422                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_423                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_424                          : signed(37 DOWNTO 0);  -- sfix38_En26
  SIGNAL tmp_425                          : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL tmp_426                          : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL p814tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL p814tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL tmp_427                          : signed(20 DOWNTO 0);  -- sfix21_En14
  SIGNAL tmp_428                          : signed(20 DOWNTO 0);  -- sfix21_En14
  SIGNAL tmp_429                          : signed(35 DOWNTO 0);  -- sfix36_En27
  SIGNAL tmp_430                          : signed(36 DOWNTO 0);  -- sfix37_En27
  SIGNAL multiplier_cast_21               : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL multiplier_mul_temp_21           : signed(34 DOWNTO 0);  -- sfix35_En27
  SIGNAL tmp_431                          : signed(33 DOWNTO 0);  -- sfix34_En27
  SIGNAL tmp_432                          : signed(36 DOWNTO 0);  -- sfix37_En27
  SIGNAL tmp_433                          : signed(36 DOWNTO 0);  -- sfix37_En27
  SIGNAL tmp_434                          : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL tmp_435                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_436                          : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL tmp_437                          : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL multiplier_cast_22               : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL multiplier_mul_temp_22           : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL tmp_438                          : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL tmp_439                          : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL tmp_440                          : signed(39 DOWNTO 0);  -- sfix40_En28
  SIGNAL tmp_441                          : signed(66 DOWNTO 0);  -- sfix67_En51
  SIGNAL multiplier_cast_23               : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_23           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL tmp_442                          : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_443                          : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL multiplier_cast_24               : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_24           : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_444                          : signed(27 DOWNTO 0);  -- sfix28_En25
  SIGNAL tmp_445                          : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL tmp_446                          : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL tmp_447                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_448                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_449                          : signed(65 DOWNTO 0);  -- sfix66_En51
  SIGNAL tmp_450                          : signed(66 DOWNTO 0);  -- sfix67_En51
  SIGNAL tmp_451                          : signed(66 DOWNTO 0);  -- sfix67_En51
  SIGNAL tmp_452                          : signed(68 DOWNTO 0);  -- sfix69_En52
  SIGNAL tmp_453                          : unsigned(27 DOWNTO 0);  -- ufix28_En26
  SIGNAL tmp_454                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL multiplier_cast_25               : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_25           : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_455                          : signed(27 DOWNTO 0);  -- sfix28_En25
  SIGNAL tmp_456                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL tmp_457                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL tmp_458                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_459                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_460                          : signed(64 DOWNTO 0);  -- sfix65_En52
  SIGNAL tmp_461                          : signed(68 DOWNTO 0);  -- sfix69_En52
  SIGNAL tmp_462                          : signed(68 DOWNTO 0);  -- sfix69_En52
  SIGNAL tmp_463                          : signed(69 DOWNTO 0);  -- sfix70_En52
  SIGNAL tmp_464                          : unsigned(27 DOWNTO 0);  -- ufix28_En26
  SIGNAL tmp_465                          : signed(28 DOWNTO 0);  -- sfix29_En26
  SIGNAL tmp_466                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL multiplier_cast_26               : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_26           : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL tmp_467                          : signed(27 DOWNTO 0);  -- sfix28_En24
  SIGNAL tmp_468                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL tmp_469                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL tmp_470                          : signed(37 DOWNTO 0);  -- sfix38_En26
  SIGNAL tmp_471                          : signed(37 DOWNTO 0);  -- sfix38_En26
  SIGNAL tmp_472                          : signed(68 DOWNTO 0);  -- sfix69_En52
  SIGNAL tmp_473                          : signed(69 DOWNTO 0);  -- sfix70_En52
  SIGNAL tmp_474                          : signed(69 DOWNTO 0);  -- sfix70_En52
  SIGNAL tmp_475                          : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL r2_tmp                           : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL tmp_476                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_477                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_478                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_479                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_480                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_481                          : signed(20 DOWNTO 0);  -- sfix21_En14
  SIGNAL tmp_482                          : signed(20 DOWNTO 0);  -- sfix21_En14
  SIGNAL tmp_483                          : signed(20 DOWNTO 0);  -- sfix21_En14
  SIGNAL tmp_484                          : unsigned(15 DOWNTO 0);  -- ufix16_En14
  SIGNAL tmp_485                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_486                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_487                          : unsigned(16 DOWNTO 0);  -- ufix17_En14
  SIGNAL tmp_488                          : signed(17 DOWNTO 0);  -- sfix18_En14
  SIGNAL tmp_489                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_490                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_491                          : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL tmp_492                          : signed(14 DOWNTO 0);  -- sfix15_En11
  SIGNAL tmp_493                          : signed(14 DOWNTO 0);  -- sfix15_En11
  SIGNAL p784tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL p784tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL tmp_494                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_495                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_496                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_497                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_498                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_499                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_500                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_501                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_502                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL multiplier_cast_27               : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL multiplier_mul_temp_27           : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_503                          : signed(32 DOWNTO 0);  -- sfix33_En26
  SIGNAL tmp_504                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_505                          : signed(30 DOWNTO 0);  -- sfix31_En25
  SIGNAL tmp_506                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_507                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_508                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_509                          : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL tmp_510                          : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL p779tmp_cast                     : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL p779tmp_cast_1                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL tmp_511                          : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL tmp_512                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_513                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_514                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_515                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_516                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_517                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL multiplier_cast_28               : signed(14 DOWNTO 0);  -- sfix15_En12
  SIGNAL multiplier_mul_temp_28           : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL tmp_518                          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL tmp_519                          : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL multiplier_cast_29               : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL multiplier_mul_temp_29           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL tmp_520                          : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_521                          : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL tmp_522                          : signed(31 DOWNTO 0);  -- sfix32_En26
  SIGNAL tmp_523                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_524                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_525                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_526                          : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL tmp_527                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_528                          : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL tmp_529                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_530                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_531                          : signed(18 DOWNTO 0);  -- sfix19_En14
  SIGNAL tmp_532                          : unsigned(28 DOWNTO 0);  -- ufix29_En26
  SIGNAL tmp_533                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_534                          : signed(32 DOWNTO 0);  -- sfix33_En25
  SIGNAL tmp_535                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_536                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_537                          : signed(37 DOWNTO 0);  -- sfix38_En26
  SIGNAL multiplier_cast_30               : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL multiplier_mul_temp_30           : signed(35 DOWNTO 0);  -- sfix36_En27
  SIGNAL tmp_538                          : signed(34 DOWNTO 0);  -- sfix35_En27
  SIGNAL tmp_539                          : signed(35 DOWNTO 0);  -- sfix36_En27
  SIGNAL multiplier_cast_31               : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL multiplier_mul_temp_31           : signed(34 DOWNTO 0);  -- sfix35_En27
  SIGNAL tmp_540                          : signed(33 DOWNTO 0);  -- sfix34_En27
  SIGNAL tmp_541                          : signed(35 DOWNTO 0);  -- sfix36_En27
  SIGNAL tmp_542                          : signed(35 DOWNTO 0);  -- sfix36_En27
  SIGNAL tmp_543                          : signed(66 DOWNTO 0);  -- sfix67_En51
  SIGNAL multiplier_cast_32               : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_32           : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL tmp_544                          : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_545                          : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL multiplier_cast_33               : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_33           : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_546                          : signed(27 DOWNTO 0);  -- sfix28_En25
  SIGNAL tmp_547                          : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL tmp_548                          : signed(29 DOWNTO 0);  -- sfix30_En25
  SIGNAL tmp_549                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_550                          : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL tmp_551                          : signed(65 DOWNTO 0);  -- sfix66_En51
  SIGNAL tmp_552                          : signed(66 DOWNTO 0);  -- sfix67_En51
  SIGNAL tmp_553                          : signed(66 DOWNTO 0);  -- sfix67_En51
  SIGNAL tmp_554                          : signed(68 DOWNTO 0);  -- sfix69_En52
  SIGNAL multiplier_cast_34               : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_34           : signed(29 DOWNTO 0);  -- sfix30_En26
  SIGNAL tmp_555                          : signed(28 DOWNTO 0);  -- sfix29_En26
  SIGNAL tmp_556                          : signed(29 DOWNTO 0);  -- sfix30_En26
  SIGNAL multiplier_cast_35               : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL multiplier_mul_temp_35           : signed(28 DOWNTO 0);  -- sfix29_En25
  SIGNAL tmp_557                          : signed(27 DOWNTO 0);  -- sfix28_En25
  SIGNAL tmp_558                          : signed(29 DOWNTO 0);  -- sfix30_En26
  SIGNAL tmp_559                          : signed(29 DOWNTO 0);  -- sfix30_En26
  SIGNAL tmp_560                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_561                          : signed(33 DOWNTO 0);  -- sfix34_En26
  SIGNAL tmp_562                          : signed(63 DOWNTO 0);  -- sfix64_En52
  SIGNAL tmp_563                          : signed(68 DOWNTO 0);  -- sfix69_En52
  SIGNAL tmp_564                          : signed(68 DOWNTO 0);  -- sfix69_En52
  SIGNAL tmp_565                          : signed(69 DOWNTO 0);  -- sfix70_En52
  SIGNAL tmp_566                          : unsigned(27 DOWNTO 0);  -- ufix28_En26
  SIGNAL tmp_567                          : signed(37 DOWNTO 0);  -- sfix38_En26
  SIGNAL tmp_568                          : signed(37 DOWNTO 0);  -- sfix38_En26
  SIGNAL multiplier_cast_36               : signed(28 DOWNTO 0);  -- sfix29_En26
  SIGNAL multiplier_mul_temp_36           : signed(66 DOWNTO 0);  -- sfix67_En52
  SIGNAL tmp_569                          : signed(65 DOWNTO 0);  -- sfix66_En52
  SIGNAL tmp_570                          : signed(69 DOWNTO 0);  -- sfix70_En52
  SIGNAL tmp_571                          : signed(69 DOWNTO 0);  -- sfix70_En52
  SIGNAL tmp_572                          : signed(13 DOWNTO 0);  -- sfix14_En7
  SIGNAL r3_tmp                           : signed(13 DOWNTO 0);  -- sfix14_En7

BEGIN
  q2_unsigned <= unsigned(q2);

  -- 'Madgwick_correction_fixpt:17' v2q2 = fi(fi(2.0, 0, 2, 0, fm) * q2, 0, 14, 13, fm);
  tmp <= resize(q2_unsigned & '0', 16);

  tmp_1 <= tmp(14 DOWNTO 1);

  q1_unsigned <= unsigned(q1);

  q3_unsigned <= unsigned(q3);

  -- 'Madgwick_correction_fixpt:27' q1q3 = fi(q1 * q3, 0, 14, 14, fm);
  tmp_2 <= q1_unsigned * q3_unsigned;

  tmp_3 <= tmp_2(27 DOWNTO 14);

  tmp_4 <= resize(tmp_3 & '0', 16);

  tmp_5 <= signed(resize(tmp_4, 17));

  tmp_6 <= resize(tmp_5, 19);

  q0_unsigned <= unsigned(q0);

  -- 'Madgwick_correction_fixpt:19' v2q0q2 = fi(fi(2.0, 0, 2, 0, fm) * q0 * q2, 0, 14, 13, fm);
  tmp_7 <= resize(q0_unsigned & '0', 16);

  tmp_8 <= tmp_7 * q2_unsigned;

  tmp_9 <= tmp_8(28 DOWNTO 15);

  tmp_10 <= signed(resize(tmp_9 & '0', 19));

  tmp_11 <= tmp_6 - tmp_10;

  tmp_12 <= resize(tmp_11, 21);

  ax_unsigned <= unsigned(ax);

  -- 'Madgwick_correction_fixpt:16' v2q1 = fi(fi(2.0, 0, 2, 0, fm) * q1, 0, 14, 13, fm);
  tmp_13 <= resize(q1_unsigned & '0', 16);

  tmp_14 <= tmp_13(14 DOWNTO 1);

  -- 'Madgwick_correction_fixpt:22' q0q1 = fi(q0 * q1, 0, 14, 14, fm);
  tmp_15 <= q0_unsigned * q1_unsigned;

  tmp_16 <= tmp_15(27 DOWNTO 14);

  tmp_17 <= resize(tmp_16 & '0', 16);

  tmp_18 <= resize(tmp_17, 17);

  -- 'Madgwick_correction_fixpt:20' v2q2q3 = fi(fi(2.0, 0, 2, 0, fm) * q2 * q3, 0, 14, 13, fm);
  tmp_19 <= resize(q2_unsigned & '0', 16);

  tmp_20 <= tmp_19 * q3_unsigned;

  tmp_21 <= tmp_20(28 DOWNTO 15);

  tmp_22 <= resize(tmp_21 & '0', 17);

  tmp_23 <= tmp_18 + tmp_22;

  tmp_24 <= signed(resize(tmp_23, 18));

  tmp_25 <= resize(tmp_24, 20);

  ay_unsigned <= unsigned(ay);

  tmp_26 <= signed(resize(ay_unsigned, 20));

  tmp_27 <= tmp_25 - tmp_26;

  -- HDL code generation from MATLAB function: Madgwick_correction_fixpt
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  --                                                                          %
  -- 
  --           Generated by MATLAB 9.3 and Fixed-Point Designer 6.0           %
  -- 
  --                                                                          %
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  -- Auxiliary variables to avoid repeated arithmetic
  -- 
  -- 'Madgwick_correction_fixpt:9' fm = get_fimath();
  -- 
  -- 'Madgwick_correction_fixpt:11' v2q0mx = fi(fi(2.0, 0, 2, 0, fm) * q0 * mx, 0, 14, 13, fm);
  tmp_28 <= resize(q0_unsigned & '0', 16);

  mx_unsigned <= unsigned(mx);

  tmp_29 <= tmp_28 * mx_unsigned;

  tmp_30 <= tmp_29(28 DOWNTO 15);

  
-- 'Madgwick_correction_fixpt:36' v2bz = fi(fi_signed(fi_signed(fi_uminus(v2q0mx) * q2 + v2q0my * q1 + mz * q0q0 + 
  -- v2q1mx * q3) - mz * q1q1 + v2q2 * my * q3) - mz * q2q2 + mz * q3q3, 1, 14, 11, fm)
  -- 
  -- 'Madgwick_correction_fixpt:62' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:63' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:64' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:65' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:66' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  tmp_31 <= signed(resize(tmp_30, 15));

  p858tmp_cast <= resize(tmp_31, 16);
  p858tmp_cast_1 <=  - (p858tmp_cast);
  tmp_32 <= p858tmp_cast_1(14 DOWNTO 0);

  -- 'Madgwick_correction_fixpt:12' v2q0my = fi(fi(2.0, 0, 2, 0, fm) * q0 * my, 0, 14, 13, fm);
  tmp_33 <= resize(q0_unsigned & '0', 16);

  my_unsigned <= unsigned(my);

  tmp_34 <= tmp_33 * my_unsigned;

  tmp_35 <= tmp_34(28 DOWNTO 15);

  mz_unsigned <= unsigned(mz);

  -- 'Madgwick_correction_fixpt:21' q0q0 = fi(q0 * q0, 0, 14, 14, fm);
  tmp_36 <= q0_unsigned * q0_unsigned;

  tmp_37 <= tmp_36(27 DOWNTO 14);

  -- 'Madgwick_correction_fixpt:14' v2q1mx = fi(fi(2.0, 0, 2, 0, fm) * q1 * mx, 0, 14, 13, fm);
  tmp_38 <= resize(q1_unsigned & '0', 16);

  tmp_39 <= tmp_38 * mx_unsigned;

  tmp_40 <= tmp_39(28 DOWNTO 15);

  -- 'Madgwick_correction_fixpt:25' q1q1 = fi(q1 * q1, 0, 14, 14, fm);
  tmp_41 <= q1_unsigned * q1_unsigned;

  tmp_42 <= tmp_41(27 DOWNTO 14);

  tmp_43 <= tmp_1 * my_unsigned;

  -- 'Madgwick_correction_fixpt:28' q2q2 = fi(q2 * q2, 0, 14, 14, fm);
  tmp_44 <= q2_unsigned * q2_unsigned;

  tmp_45 <= tmp_44(27 DOWNTO 14);

  -- 'Madgwick_correction_fixpt:30' q3q3 = fi(q3 * q3, 0, 14, 14, fm);
  tmp_46 <= q3_unsigned * q3_unsigned;

  tmp_47 <= tmp_46(27 DOWNTO 14);

  multiplier_cast <= signed(resize(q2_unsigned, 15));
  multiplier_mul_temp <= tmp_32 * multiplier_cast;
  tmp_48 <= multiplier_mul_temp(28 DOWNTO 0);

  tmp_49 <= resize(tmp_48, 31);

  tmp_50 <= tmp_35 * q1_unsigned;

  tmp_51 <= signed(resize(tmp_50, 31));

  tmp_52 <= tmp_49 + tmp_51;

  tmp_53 <= resize(tmp_52 & '0', 34);

  tmp_54 <= mz_unsigned * tmp_37;

  tmp_55 <= signed(resize(tmp_54, 34));

  tmp_56 <= tmp_53 + tmp_55;

  tmp_57 <= resize(tmp_56, 36);

  tmp_58 <= tmp_40 * q3_unsigned;

  tmp_59 <= signed(resize(tmp_58 & '0', 36));

  tmp_60 <= tmp_57 + tmp_59;

  tmp_61 <= resize(tmp_60, 38);

  tmp_62 <= mz_unsigned * tmp_42;

  tmp_63 <= signed(resize(tmp_62, 38));

  tmp_64 <= tmp_61 - tmp_63;

  tmp_65 <= resize(tmp_64 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 53);

  tmp_66 <= tmp_43 * q3_unsigned;

  tmp_67 <= signed(resize(tmp_66, 53));

  tmp_68 <= tmp_65 + tmp_67;

  tmp_69 <= resize(tmp_68, 55);

  tmp_70 <= mz_unsigned * tmp_45;

  tmp_71 <= signed(resize(tmp_70 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 55));

  tmp_72 <= tmp_69 - tmp_71;

  tmp_73 <= resize(tmp_72, 57);

  tmp_74 <= mz_unsigned * tmp_47;

  tmp_75 <= signed(resize(tmp_74 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 57));

  tmp_76 <= tmp_73 + tmp_75;

  tmp_77 <= tmp_76(43 DOWNTO 30);

  -- 'Madgwick_correction_fixpt:13' v2q0mz = fi(fi(2.0, 0, 2, 0, fm) * q0 * mz, 0, 14, 13, fm);
  tmp_78 <= resize(q0_unsigned & '0', 16);

  tmp_79 <= tmp_78 * mz_unsigned;

  tmp_80 <= tmp_79(28 DOWNTO 15);

  tmp_81 <= tmp_14 * my_unsigned;

  tmp_82 <= tmp_14 * mz_unsigned;

  -- Reference direction of Earth's magnetic field
  -- 
  
-- 'Madgwick_correction_fixpt:33' hx = fi(fi_signed(fi_signed(fi_signed(mx * q0q0) - v2q0my * q3 + v2q0mz * q2 + mx 
  -- * q1q1 + v2q1 * my * q2 + v2q1 * mz * q3) - mx * q2q2) - mx * q3q3, 1, 14, 11, fm)
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  tmp_83 <= mx_unsigned * tmp_37;

  tmp_84 <= signed(resize(tmp_83, 29));

  tmp_85 <= resize(tmp_84, 31);

  tmp_86 <= tmp_35 * q3_unsigned;

  tmp_87 <= signed(resize(tmp_86 & '0', 31));

  tmp_88 <= tmp_85 - tmp_87;

  tmp_89 <= resize(tmp_88, 33);

  tmp_90 <= tmp_80 * q2_unsigned;

  tmp_91 <= signed(resize(tmp_90 & '0', 33));

  tmp_92 <= tmp_89 + tmp_91;

  tmp_93 <= resize(tmp_92, 35);

  tmp_94 <= mx_unsigned * tmp_42;

  tmp_95 <= signed(resize(tmp_94, 35));

  tmp_96 <= tmp_93 + tmp_95;

  tmp_97 <= resize(tmp_96 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 50);

  tmp_98 <= tmp_81 * q2_unsigned;

  tmp_99 <= signed(resize(tmp_98, 50));

  tmp_100 <= tmp_97 + tmp_99;

  tmp_101 <= resize(tmp_100, 52);

  tmp_102 <= tmp_82 * q3_unsigned;

  tmp_103 <= signed(resize(tmp_102, 52));

  tmp_104 <= tmp_101 + tmp_103;

  tmp_105 <= resize(tmp_104, 54);

  tmp_106 <= mx_unsigned * tmp_45;

  tmp_107 <= signed(resize(tmp_106 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 54));

  tmp_108 <= tmp_105 - tmp_107;

  tmp_109 <= resize(tmp_108, 56);

  tmp_110 <= mx_unsigned * tmp_47;

  tmp_111 <= signed(resize(tmp_110 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 56));

  tmp_112 <= tmp_109 - tmp_111;

  tmp_113 <= tmp_112(43 DOWNTO 30);

  tmp_114 <= tmp_1 * mz_unsigned;

  
-- 'Madgwick_correction_fixpt:34' hy = fi(fi_signed(fi_signed(fi_signed(v2q0mx * q3 + my * q0q0) - v2q0mz * q1 + v2q1mx 
  -- * q2) - my * q1q1 + my * q2q2 + v2q2 * mz * q3) - my * q3q3, 1, 14, 11, fm)
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  tmp_115 <= tmp_30 * q3_unsigned;

  tmp_116 <= resize(tmp_115 & '0', 30);

  tmp_117 <= my_unsigned * tmp_37;

  tmp_118 <= resize(tmp_117, 30);

  tmp_119 <= tmp_116 + tmp_118;

  tmp_120 <= signed(resize(tmp_119, 31));

  tmp_121 <= resize(tmp_120, 33);

  tmp_122 <= tmp_80 * q1_unsigned;

  tmp_123 <= signed(resize(tmp_122 & '0', 33));

  tmp_124 <= tmp_121 - tmp_123;

  tmp_125 <= resize(tmp_124, 35);

  tmp_126 <= tmp_40 * q2_unsigned;

  tmp_127 <= signed(resize(tmp_126 & '0', 35));

  tmp_128 <= tmp_125 + tmp_127;

  tmp_129 <= resize(tmp_128, 37);

  tmp_130 <= my_unsigned * tmp_42;

  tmp_131 <= signed(resize(tmp_130, 37));

  tmp_132 <= tmp_129 - tmp_131;

  tmp_133 <= resize(tmp_132, 39);

  tmp_134 <= my_unsigned * tmp_45;

  tmp_135 <= signed(resize(tmp_134, 39));

  tmp_136 <= tmp_133 + tmp_135;

  tmp_137 <= resize(tmp_136 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 
    54);

  tmp_138 <= tmp_114 * q3_unsigned;

  tmp_139 <= signed(resize(tmp_138, 54));

  tmp_140 <= tmp_137 + tmp_139;

  tmp_141 <= resize(tmp_140, 56);

  tmp_142 <= my_unsigned * tmp_47;

  tmp_143 <= signed(resize(tmp_142 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 56));

  tmp_144 <= tmp_141 - tmp_143;

  tmp_145 <= tmp_144(43 DOWNTO 30);

  -- 'Madgwick_correction_fixpt:35' v2bx = fi(sqrt(hx * hx + hy * hy), 0, 14, 12, fm);
  tmp_146 <= tmp_113 * tmp_113;

  tmp_147 <= resize(tmp_146, 29);

  tmp_148 <= tmp_145 * tmp_145;

  tmp_149 <= resize(tmp_148, 29);

  tmp_150 <= tmp_147 + tmp_149;

  
  tmp_151 <= '1' WHEN tmp_150 <= to_signed(16#00000000#, 29) ELSE
      '0';

  -- HDL code generation from MATLAB function: Madgwick_correction_fixpt_falseregionp859
  p1_output : PROCESS (tmp_150)
    VARIABLE yy : signed(14 DOWNTO 0);
    VARIABLE tmp152 : signed(14 DOWNTO 0);
    VARIABLE y_0 : signed(14 DOWNTO 0);
    VARIABLE cast : vector_of_unsigned8(0 TO 13);
    VARIABLE sll_temp : vector_of_signed15(0 TO 13);
    VARIABLE mul_temp : vector_of_signed30(0 TO 13);
    VARIABLE cast_0 : vector_of_signed30(0 TO 13);
    VARIABLE cast_1 : vector_of_unsigned8(0 TO 13);
    VARIABLE sll_temp_0 : vector_of_signed15(0 TO 13);
  BEGIN
    yy := to_signed(16#0000#, 15);

    FOR ii IN 13 DOWNTO 0 LOOP
      cast(ii) := unsigned(to_signed(ii, 32)(7 DOWNTO 0));
      sll_temp(ii) := to_signed(16#0001#, 15) sll to_integer(cast(ii));
      tmp152 := yy OR sll_temp(ii);
      mul_temp(ii) := tmp152 * tmp152;
      cast_0(ii) := resize(tmp_150, 30);
      IF mul_temp(ii) <= cast_0(ii) THEN 
        cast_1(ii) := unsigned(to_signed(ii, 32)(7 DOWNTO 0));
        sll_temp_0(ii) := to_signed(16#0001#, 15) sll to_integer(cast_1(ii));
        y_0 := yy OR sll_temp_0(ii);
      ELSE 
        y_0 := yy;
      END IF;
      yy := y_0;
    END LOOP;

    y_y <= yy;
  END PROCESS p1_output;


  -- HDL code generation from MATLAB function: Madgwick_correction_fixpt_trueregionp859
  y_y_1 <= to_signed(16#0000#, 15);

  
  tmp_153 <= y_y WHEN tmp_151 = '0' ELSE
      y_y_1;

  tmp_154 <= unsigned(tmp_153(12 DOWNTO 0) & '0');

  tmp_155 <= signed(resize(tmp_45, 17));

  tmp_156 <= to_signed(16#02000#, 17) - tmp_155;

  tmp_157 <= resize(tmp_156, 19);

  tmp_158 <= signed(resize(tmp_47, 19));

  tmp_159 <= tmp_157 - tmp_158;

  tmp_160 <= signed(resize(tmp_3, 15));

  tmp_161 <= resize(tmp_160, 17);

  -- 'Madgwick_correction_fixpt:23' q0q2 = fi(q0 * q2, 0, 14, 14, fm);
  tmp_162 <= q0_unsigned * q2_unsigned;

  tmp_163 <= tmp_162(27 DOWNTO 14);

  tmp_164 <= signed(resize(tmp_163, 17));

  tmp_165 <= tmp_161 - tmp_164;

  multiplier_cast_1 <= signed(resize(tmp_154, 15));
  multiplier_mul_temp_1 <= multiplier_cast_1 * tmp_159;
  tmp_166 <= multiplier_mul_temp_1(32 DOWNTO 0);

  tmp_167 <= resize(tmp_166, 34);

  tmp_168 <= tmp_77 * tmp_165;

  tmp_169 <= resize(tmp_168 & '0', 34);

  tmp_170 <= tmp_167 + tmp_169;

  tmp_171 <= resize(tmp_170, 36);

  tmp_172 <= signed(resize(tmp_154, 15));

  p842tmp_cast <= resize(tmp_172, 16);
  p842tmp_cast_1 <=  - (p842tmp_cast);
  tmp_173 <= p842tmp_cast_1(14 DOWNTO 0);

  -- 'Madgwick_correction_fixpt:26' q1q2 = fi(q1 * q2, 0, 14, 14, fm);
  tmp_174 <= q1_unsigned * q2_unsigned;

  tmp_175 <= tmp_174(27 DOWNTO 14);

  tmp_176 <= signed(resize(tmp_175, 15));

  tmp_177 <= resize(tmp_176, 17);

  -- 'Madgwick_correction_fixpt:24' q0q3 = fi(q0 * q3, 0, 14, 14, fm);
  tmp_178 <= q0_unsigned * q3_unsigned;

  tmp_179 <= tmp_178(27 DOWNTO 14);

  tmp_180 <= signed(resize(tmp_179, 17));

  tmp_181 <= tmp_177 - tmp_180;

  tmp_182 <= resize(tmp_16, 15);

  -- 'Madgwick_correction_fixpt:29' q2q3 = fi(q2 * q3, 0, 14, 14, fm);
  tmp_183 <= q2_unsigned * q3_unsigned;

  tmp_184 <= tmp_183(27 DOWNTO 14);

  tmp_185 <= resize(tmp_184, 15);

  tmp_186 <= tmp_182 + tmp_185;

  multiplier_cast_2 <= signed(resize(tmp_154, 15));
  multiplier_mul_temp_2 <= multiplier_cast_2 * tmp_181;
  tmp_187 <= multiplier_mul_temp_2(30 DOWNTO 0);

  tmp_188 <= resize(tmp_187, 32);

  multiplier_cast_3 <= signed(resize(tmp_186, 16));
  multiplier_mul_temp_3 <= tmp_77 * multiplier_cast_3;
  tmp_189 <= multiplier_mul_temp_3(28 DOWNTO 0);

  tmp_190 <= resize(tmp_189 & '0', 32);

  tmp_191 <= tmp_188 + tmp_190;

  tmp_192 <= resize(tmp_191, 34);

  tmp_193 <= resize(tmp_163, 15);

  tmp_194 <= resize(tmp_3, 15);

  tmp_195 <= tmp_193 + tmp_194;

  tmp_196 <= signed(resize(tmp_42, 17));

  tmp_197 <= to_signed(16#02000#, 17) - tmp_196;

  tmp_198 <= resize(tmp_197, 19);

  tmp_199 <= signed(resize(tmp_45, 19));

  tmp_200 <= tmp_198 - tmp_199;

  tmp_201 <= tmp_154 * tmp_195;

  tmp_202 <= signed(resize(tmp_201, 36));

  tmp_203 <= tmp_77 * tmp_200;

  tmp_204 <= resize(tmp_203 & '0', 36);

  tmp_205 <= tmp_202 + tmp_204;

  tmp_206 <= resize(tmp_205, 38);

  -- Gradient decent algorithm corrective step
  -- 
  
-- 'Madgwick_correction_fixpt:41' r0 = fi(fi_signed(fi_uminus(v2q2) * (fi_signed(fi_signed(fi(2.0, 0, 2, 0, fm) * 
  
-- q1q3) - v2q0q2) - ax) + v2q1 * (fi_signed(fi(2.0, 0, 2, 0, fm) * q0q1 + v2q2q3) - ay)) - v2bz * q2 * (fi_signed(v2bx 
  
-- * (fi_signed(fi_signed(fi(0.5, 0, 14, 14, fm)) - q2q2) - q3q3) + v2bz * (fi_signed(q1q3) - q0q2)) - mx) + (fi_uminus(v2bx) 
  
-- * q3 + v2bz * q1) * (fi_signed(v2bx * (fi_signed(q1q2) - q0q3) + v2bz * (q0q1 + q2q3)) - my) + v2bx * q2 * (fi_signed(v2bx 
  
-- * (q0q2 + q1q3) + v2bz * (fi_signed(fi_signed(fi(0.5, 0, 14, 14, fm)) - q1q1) - q2q2)) - mz), 1, 14, 8, fm)
  -- 
  -- 'Madgwick_correction_fixpt:62' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:63' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:64' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:65' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:66' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:62' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:63' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:64' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:65' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:66' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  tmp_207 <= signed(resize(tmp_1, 15));

  p853tmp_cast <= resize(tmp_207, 16);
  p853tmp_cast_1 <=  - (p853tmp_cast);
  tmp_208 <= p853tmp_cast_1(14 DOWNTO 0);

  tmp_209 <= signed(resize(ax_unsigned, 21));

  tmp_210 <= tmp_12 - tmp_209;

  tmp_211 <= tmp_208 * tmp_210;

  tmp_212 <= resize(tmp_211, 37);

  multiplier_cast_4 <= signed(resize(tmp_14, 15));
  multiplier_mul_temp_4 <= multiplier_cast_4 * tmp_27;
  tmp_213 <= multiplier_mul_temp_4(33 DOWNTO 0);

  tmp_214 <= resize(tmp_213, 37);

  tmp_215 <= tmp_212 + tmp_214;

  tmp_216 <= resize(tmp_215 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 65);

  multiplier_cast_5 <= signed(resize(q2_unsigned, 15));
  multiplier_mul_temp_5 <= tmp_77 * multiplier_cast_5;
  tmp_217 <= multiplier_mul_temp_5(27 DOWNTO 0);

  tmp_218 <= signed(resize(mx_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 36));

  tmp_219 <= tmp_171 - tmp_218;

  tmp_220 <= tmp_217 * tmp_219;

  tmp_221 <= resize(tmp_220, 65);

  tmp_222 <= tmp_216 - tmp_221;

  tmp_223 <= resize(tmp_222 & '0', 67);

  multiplier_cast_6 <= signed(resize(q3_unsigned, 15));
  multiplier_mul_temp_6 <= tmp_173 * multiplier_cast_6;
  tmp_224 <= multiplier_mul_temp_6(28 DOWNTO 0);

  tmp_225 <= resize(tmp_224, 30);

  multiplier_cast_7 <= signed(resize(q1_unsigned, 15));
  multiplier_mul_temp_7 <= tmp_77 * multiplier_cast_7;
  tmp_226 <= multiplier_mul_temp_7(27 DOWNTO 0);

  tmp_227 <= resize(tmp_226 & '0', 30);

  tmp_228 <= tmp_225 + tmp_227;

  tmp_229 <= signed(resize(my_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 34));

  tmp_230 <= tmp_192 - tmp_229;

  tmp_231 <= tmp_228 * tmp_230;

  tmp_232 <= resize(tmp_231, 67);

  tmp_233 <= tmp_223 + tmp_232;

  tmp_234 <= resize(tmp_233, 68);

  tmp_235 <= tmp_154 * q2_unsigned;

  tmp_236 <= signed(resize(mz_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 38));

  tmp_237 <= tmp_206 - tmp_236;

  multiplier_cast_8 <= signed(resize(tmp_235, 29));
  multiplier_mul_temp_8 <= multiplier_cast_8 * tmp_237;
  tmp_238 <= multiplier_mul_temp_8(65 DOWNTO 0);

  tmp_239 <= resize(tmp_238, 68);

  tmp_240 <= tmp_234 + tmp_239;

  tmp_241 <= tmp_240(57 DOWNTO 44);

  enb <= clk_enable;

  r0_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      r0_tmp <= to_signed(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r0_tmp <= tmp_241;
      END IF;
    END IF;
  END PROCESS r0_reg_process;


  r0 <= std_logic_vector(r0_tmp);

  -- 'Madgwick_correction_fixpt:18' v2q3 = fi(fi(2.0, 0, 2, 0, fm) * q3, 0, 14, 13, fm);
  tmp_242 <= resize(q3_unsigned & '0', 16);

  tmp_243 <= tmp_242(14 DOWNTO 1);

  
-- 'Madgwick_correction_fixpt:42' r1 = fi(fi_signed(v2q3 * (fi_signed(fi_signed(fi(2.0, 0, 2, 0, fm) * q1q3) - v2q0q2) 
  
-- - ax) + v2q0 * (fi_signed(fi(2.0, 0, 2, 0, fm) * q0q1 + v2q2q3) - ay)) - fi(4.0, 0, 3, 0, fm) * q1 * (fi_signed(fi_signed(fi_signed(fi(1, 
  
-- 0, 1, 0, fm)) - fi(2.0, 0, 2, 0, fm) * q1q1) - fi(2.0, 0, 2, 0, fm) * q2q2) - az) + v2bz * q3 * (fi_signed(v2bx 
  
-- * (fi_signed(fi_signed(fi(0.5, 0, 14, 14, fm)) - q2q2) - q3q3) + v2bz * (fi_signed(q1q3) - q0q2)) - mx) + (v2bx 
  
-- * q2 + v2bz * q0) * (fi_signed(v2bx * (fi_signed(q1q2) - q0q3) + v2bz * (q0q1 + q2q3)) - my) + (fi_signed(v2bx 
  
-- * q3) - v4bz * q1) * (fi_signed(v2bx * (q0q2 + q1q3) + v2bz * (fi_signed(fi_signed(fi(0.5, 0, 14, 14, fm)) - q1q1) 
  -- - q2q2)) - mz), 1, 14, 7, fm)
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  tmp_244 <= resize(tmp_3 & '0', 16);

  tmp_245 <= signed(resize(tmp_244, 17));

  tmp_246 <= resize(tmp_245, 19);

  tmp_247 <= signed(resize(tmp_9 & '0', 19));

  tmp_248 <= tmp_246 - tmp_247;

  tmp_249 <= resize(tmp_248, 21);

  tmp_250 <= signed(resize(ax_unsigned, 21));

  tmp_251 <= tmp_249 - tmp_250;

  -- 'Madgwick_correction_fixpt:15' v2q0 = fi(fi(2.0, 0, 2, 0, fm) * q0, 0, 14, 13, fm);
  tmp_252 <= resize(q0_unsigned & '0', 16);

  tmp_253 <= tmp_252(14 DOWNTO 1);

  tmp_254 <= resize(tmp_16 & '0', 16);

  tmp_255 <= resize(tmp_254, 17);

  tmp_256 <= resize(tmp_21 & '0', 17);

  tmp_257 <= tmp_255 + tmp_256;

  tmp_258 <= signed(resize(tmp_257, 18));

  tmp_259 <= resize(tmp_258, 20);

  tmp_260 <= signed(resize(ay_unsigned, 20));

  tmp_261 <= tmp_259 - tmp_260;

  tmp_262 <= resize(tmp_42 & '0', 16);

  tmp_263 <= signed(resize(tmp_262, 18));

  tmp_264 <= to_signed(16#04000#, 18) - tmp_263;

  tmp_265 <= resize(tmp_264, 20);

  tmp_266 <= resize(tmp_45 & '0', 16);

  tmp_267 <= signed(resize(tmp_266, 20));

  tmp_268 <= tmp_265 - tmp_267;

  tmp_269 <= resize(tmp_268, 22);

  az_unsigned <= unsigned(az);

  tmp_270 <= signed(resize(tmp_45, 17));

  tmp_271 <= to_signed(16#02000#, 17) - tmp_270;

  tmp_272 <= resize(tmp_271, 19);

  tmp_273 <= signed(resize(tmp_47, 19));

  tmp_274 <= tmp_272 - tmp_273;

  tmp_275 <= signed(resize(tmp_3, 15));

  tmp_276 <= resize(tmp_275, 17);

  tmp_277 <= signed(resize(tmp_163, 17));

  tmp_278 <= tmp_276 - tmp_277;

  multiplier_cast_9 <= signed(resize(tmp_154, 15));
  multiplier_mul_temp_9 <= multiplier_cast_9 * tmp_274;
  tmp_279 <= multiplier_mul_temp_9(32 DOWNTO 0);

  tmp_280 <= resize(tmp_279, 34);

  tmp_281 <= tmp_77 * tmp_278;

  tmp_282 <= resize(tmp_281 & '0', 34);

  tmp_283 <= tmp_280 + tmp_282;

  tmp_284 <= resize(tmp_283, 36);

  tmp_285 <= signed(resize(tmp_175, 15));

  tmp_286 <= resize(tmp_285, 17);

  tmp_287 <= signed(resize(tmp_179, 17));

  tmp_288 <= tmp_286 - tmp_287;

  tmp_289 <= resize(tmp_16, 15);

  tmp_290 <= resize(tmp_184, 15);

  tmp_291 <= tmp_289 + tmp_290;

  multiplier_cast_10 <= signed(resize(tmp_154, 15));
  multiplier_mul_temp_10 <= multiplier_cast_10 * tmp_288;
  tmp_292 <= multiplier_mul_temp_10(30 DOWNTO 0);

  tmp_293 <= resize(tmp_292, 32);

  multiplier_cast_11 <= signed(resize(tmp_291, 16));
  multiplier_mul_temp_11 <= tmp_77 * multiplier_cast_11;
  tmp_294 <= multiplier_mul_temp_11(28 DOWNTO 0);

  tmp_295 <= resize(tmp_294 & '0', 32);

  tmp_296 <= tmp_293 + tmp_295;

  tmp_297 <= resize(tmp_296, 34);

  -- 'Madgwick_correction_fixpt:38' v4bz = fi(fi(2.0, 0, 2, 0, fm) * v2bz, 1, 14, 10, fm);
  p854tmp_cast <= resize(tmp_77 & '0', 17);
  tmp_298 <= p854tmp_cast(15 DOWNTO 0);

  tmp_299 <= tmp_298(14 DOWNTO 1);

  tmp_300 <= resize(tmp_163, 15);

  tmp_301 <= resize(tmp_3, 15);

  tmp_302 <= tmp_300 + tmp_301;

  tmp_303 <= signed(resize(tmp_42, 17));

  tmp_304 <= to_signed(16#02000#, 17) - tmp_303;

  tmp_305 <= resize(tmp_304, 19);

  tmp_306 <= signed(resize(tmp_45, 19));

  tmp_307 <= tmp_305 - tmp_306;

  tmp_308 <= tmp_154 * tmp_302;

  tmp_309 <= signed(resize(tmp_308, 36));

  tmp_310 <= tmp_77 * tmp_307;

  tmp_311 <= resize(tmp_310 & '0', 36);

  tmp_312 <= tmp_309 + tmp_311;

  tmp_313 <= resize(tmp_312, 38);

  multiplier_cast_12 <= signed(resize(tmp_243, 15));
  multiplier_mul_temp_12 <= multiplier_cast_12 * tmp_251;
  tmp_314 <= multiplier_mul_temp_12(34 DOWNTO 0);

  tmp_315 <= resize(tmp_314, 36);

  multiplier_cast_13 <= signed(resize(tmp_253, 15));
  multiplier_mul_temp_13 <= multiplier_cast_13 * tmp_261;
  tmp_316 <= multiplier_mul_temp_13(33 DOWNTO 0);

  tmp_317 <= resize(tmp_316, 36);

  tmp_318 <= tmp_315 + tmp_317;

  tmp_319 <= resize(tmp_318 & '0', 40);

  tmp_320 <= resize(q1_unsigned & '0' & '0', 17);

  tmp_321 <= signed(resize(az_unsigned, 22));

  tmp_322 <= tmp_269 - tmp_321;

  multiplier_cast_14 <= signed(resize(tmp_320, 18));
  multiplier_mul_temp_14 <= multiplier_cast_14 * tmp_322;
  tmp_323 <= multiplier_mul_temp_14(38 DOWNTO 0);

  tmp_324 <= resize(tmp_323, 40);

  tmp_325 <= tmp_319 - tmp_324;

  tmp_326 <= resize(tmp_325 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 65);

  multiplier_cast_15 <= signed(resize(q3_unsigned, 15));
  multiplier_mul_temp_15 <= tmp_77 * multiplier_cast_15;
  tmp_327 <= multiplier_mul_temp_15(27 DOWNTO 0);

  tmp_328 <= signed(resize(mx_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 36));

  tmp_329 <= tmp_284 - tmp_328;

  tmp_330 <= tmp_327 * tmp_329;

  tmp_331 <= resize(tmp_330, 65);

  tmp_332 <= tmp_326 + tmp_331;

  tmp_333 <= resize(tmp_332 & '0', 67);

  tmp_334 <= tmp_154 * q2_unsigned;

  tmp_335 <= signed(resize(tmp_334, 31));

  multiplier_cast_16 <= signed(resize(q0_unsigned, 15));
  multiplier_mul_temp_16 <= tmp_77 * multiplier_cast_16;
  tmp_336 <= multiplier_mul_temp_16(27 DOWNTO 0);

  tmp_337 <= resize(tmp_336 & '0', 31);

  tmp_338 <= tmp_335 + tmp_337;

  tmp_339 <= signed(resize(my_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 34));

  tmp_340 <= tmp_297 - tmp_339;

  tmp_341 <= tmp_338 * tmp_340;

  tmp_342 <= resize(tmp_341, 67);

  tmp_343 <= tmp_333 + tmp_342;

  tmp_344 <= resize(tmp_343, 70);

  tmp_345 <= tmp_154 * q3_unsigned;

  tmp_346 <= signed(resize(tmp_345, 29));

  tmp_347 <= resize(tmp_346, 31);

  multiplier_cast_17 <= signed(resize(q1_unsigned, 15));
  multiplier_mul_temp_17 <= tmp_299 * multiplier_cast_17;
  tmp_348 <= multiplier_mul_temp_17(27 DOWNTO 0);

  tmp_349 <= resize(tmp_348 & '0' & '0', 31);

  tmp_350 <= tmp_347 - tmp_349;

  tmp_351 <= signed(resize(mz_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 38));

  tmp_352 <= tmp_313 - tmp_351;

  tmp_353 <= tmp_350 * tmp_352;

  tmp_354 <= resize(tmp_353, 70);

  tmp_355 <= tmp_344 + tmp_354;

  tmp_356 <= tmp_355(58 DOWNTO 45);

  r1_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      r1_tmp <= to_signed(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r1_tmp <= tmp_356;
      END IF;
    END IF;
  END PROCESS r1_reg_process;


  r1 <= std_logic_vector(r1_tmp);

  tmp_357 <= resize(tmp_3 & '0', 16);

  tmp_358 <= signed(resize(tmp_357, 17));

  tmp_359 <= resize(tmp_358, 19);

  tmp_360 <= signed(resize(tmp_9 & '0', 19));

  tmp_361 <= tmp_359 - tmp_360;

  tmp_362 <= resize(tmp_361, 21);

  tmp_363 <= resize(tmp_16 & '0', 16);

  tmp_364 <= resize(tmp_363, 17);

  tmp_365 <= resize(tmp_21 & '0', 17);

  tmp_366 <= tmp_364 + tmp_365;

  tmp_367 <= signed(resize(tmp_366, 18));

  tmp_368 <= resize(tmp_367, 20);

  tmp_369 <= signed(resize(ay_unsigned, 20));

  tmp_370 <= tmp_368 - tmp_369;

  tmp_371 <= resize(tmp_42 & '0', 16);

  tmp_372 <= signed(resize(tmp_371, 18));

  tmp_373 <= to_signed(16#04000#, 18) - tmp_372;

  tmp_374 <= resize(tmp_373, 20);

  tmp_375 <= resize(tmp_45 & '0', 16);

  tmp_376 <= signed(resize(tmp_375, 20));

  tmp_377 <= tmp_374 - tmp_376;

  tmp_378 <= resize(tmp_377, 22);

  -- 'Madgwick_correction_fixpt:37' v4bx = fi(fi(2.0, 0, 2, 0, fm) * v2bx, 0, 14, 11, fm);
  tmp_379 <= resize(tmp_154 & '0', 16);

  tmp_380 <= tmp_379(14 DOWNTO 1);

  tmp_381 <= signed(resize(tmp_380, 15));

  p801tmp_cast <= resize(tmp_381, 16);
  p801tmp_cast_1 <=  - (p801tmp_cast);
  tmp_382 <= p801tmp_cast_1(14 DOWNTO 0);

  tmp_383 <= signed(resize(tmp_45, 17));

  tmp_384 <= to_signed(16#02000#, 17) - tmp_383;

  tmp_385 <= resize(tmp_384, 19);

  tmp_386 <= signed(resize(tmp_47, 19));

  tmp_387 <= tmp_385 - tmp_386;

  tmp_388 <= signed(resize(tmp_3, 15));

  tmp_389 <= resize(tmp_388, 17);

  tmp_390 <= signed(resize(tmp_163, 17));

  tmp_391 <= tmp_389 - tmp_390;

  multiplier_cast_18 <= signed(resize(tmp_154, 15));
  multiplier_mul_temp_18 <= multiplier_cast_18 * tmp_387;
  tmp_392 <= multiplier_mul_temp_18(32 DOWNTO 0);

  tmp_393 <= resize(tmp_392, 34);

  tmp_394 <= tmp_77 * tmp_391;

  tmp_395 <= resize(tmp_394 & '0', 34);

  tmp_396 <= tmp_393 + tmp_395;

  tmp_397 <= resize(tmp_396, 36);

  tmp_398 <= signed(resize(tmp_175, 15));

  tmp_399 <= resize(tmp_398, 17);

  tmp_400 <= signed(resize(tmp_179, 17));

  tmp_401 <= tmp_399 - tmp_400;

  tmp_402 <= resize(tmp_16, 15);

  tmp_403 <= resize(tmp_184, 15);

  tmp_404 <= tmp_402 + tmp_403;

  multiplier_cast_19 <= signed(resize(tmp_154, 15));
  multiplier_mul_temp_19 <= multiplier_cast_19 * tmp_401;
  tmp_405 <= multiplier_mul_temp_19(30 DOWNTO 0);

  tmp_406 <= resize(tmp_405, 32);

  multiplier_cast_20 <= signed(resize(tmp_404, 16));
  multiplier_mul_temp_20 <= tmp_77 * multiplier_cast_20;
  tmp_407 <= multiplier_mul_temp_20(28 DOWNTO 0);

  tmp_408 <= resize(tmp_407 & '0', 32);

  tmp_409 <= tmp_406 + tmp_408;

  tmp_410 <= resize(tmp_409, 34);

  tmp_411 <= resize(tmp_163, 15);

  tmp_412 <= resize(tmp_3, 15);

  tmp_413 <= tmp_411 + tmp_412;

  tmp_414 <= signed(resize(tmp_42, 17));

  tmp_415 <= to_signed(16#02000#, 17) - tmp_414;

  tmp_416 <= resize(tmp_415, 19);

  tmp_417 <= signed(resize(tmp_45, 19));

  tmp_418 <= tmp_416 - tmp_417;

  tmp_419 <= tmp_154 * tmp_413;

  tmp_420 <= signed(resize(tmp_419, 36));

  tmp_421 <= tmp_77 * tmp_418;

  tmp_422 <= resize(tmp_421 & '0', 36);

  tmp_423 <= tmp_420 + tmp_422;

  tmp_424 <= resize(tmp_423, 38);

  
-- 'Madgwick_correction_fixpt:43' r2 = fi(fi_signed(fi_uminus(v2q0) * (fi_signed(fi_signed(fi(2.0, 0, 2, 0, fm) * 
  
-- q1q3) - v2q0q2) - ax) + v2q3 * (fi_signed(fi(2.0, 0, 2, 0, fm) * q0q1 + v2q2q3) - ay)) - fi(4.0, 0, 3, 0, fm) * 
  
-- q2 * (fi_signed(fi_signed(fi_signed(fi(1, 0, 1, 0, fm)) - fi(2.0, 0, 2, 0, fm) * q1q1) - fi(2.0, 0, 2, 0, fm) * 
  
-- q2q2) - az) + (fi_signed(fi_uminus(v4bx) * q2) - v2bz * q0) * (fi_signed(v2bx * (fi_signed(fi_signed(fi(0.5, 0, 
  
-- 14, 14, fm)) - q2q2) - q3q3) + v2bz * (fi_signed(q1q3) - q0q2)) - mx) + (v2bx * q1 + v2bz * q3) * (fi_signed(v2bx 
  
-- * (fi_signed(q1q2) - q0q3) + v2bz * (q0q1 + q2q3)) - my) + (fi_signed(v2bx * q0) - v4bz * q2) * (fi_signed(v2bx 
  
-- * (q0q2 + q1q3) + v2bz * (fi_signed(fi_signed(fi(0.5, 0, 14, 14, fm)) - q1q1) - q2q2)) - mz), 1, 14, 7, fm)
  -- 
  -- 'Madgwick_correction_fixpt:62' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:63' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:64' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:65' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:66' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:62' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:63' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:64' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:65' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:66' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  tmp_425 <= signed(resize(tmp_253, 15));

  p814tmp_cast <= resize(tmp_425, 16);
  p814tmp_cast_1 <=  - (p814tmp_cast);
  tmp_426 <= p814tmp_cast_1(14 DOWNTO 0);

  tmp_427 <= signed(resize(ax_unsigned, 21));

  tmp_428 <= tmp_362 - tmp_427;

  tmp_429 <= tmp_426 * tmp_428;

  tmp_430 <= resize(tmp_429, 37);

  multiplier_cast_21 <= signed(resize(tmp_243, 15));
  multiplier_mul_temp_21 <= multiplier_cast_21 * tmp_370;
  tmp_431 <= multiplier_mul_temp_21(33 DOWNTO 0);

  tmp_432 <= resize(tmp_431, 37);

  tmp_433 <= tmp_430 + tmp_432;

  tmp_434 <= resize(tmp_433 & '0', 40);

  tmp_435 <= resize(q2_unsigned & '0' & '0', 17);

  tmp_436 <= signed(resize(az_unsigned, 22));

  tmp_437 <= tmp_378 - tmp_436;

  multiplier_cast_22 <= signed(resize(tmp_435, 18));
  multiplier_mul_temp_22 <= multiplier_cast_22 * tmp_437;
  tmp_438 <= multiplier_mul_temp_22(38 DOWNTO 0);

  tmp_439 <= resize(tmp_438, 40);

  tmp_440 <= tmp_434 - tmp_439;

  tmp_441 <= resize(tmp_440 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 67);

  multiplier_cast_23 <= signed(resize(q2_unsigned, 15));
  multiplier_mul_temp_23 <= tmp_382 * multiplier_cast_23;
  tmp_442 <= multiplier_mul_temp_23(28 DOWNTO 0);

  tmp_443 <= resize(tmp_442, 30);

  multiplier_cast_24 <= signed(resize(q0_unsigned, 15));
  multiplier_mul_temp_24 <= tmp_77 * multiplier_cast_24;
  tmp_444 <= multiplier_mul_temp_24(27 DOWNTO 0);

  tmp_445 <= resize(tmp_444, 30);

  tmp_446 <= tmp_443 - tmp_445;

  tmp_447 <= signed(resize(mx_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 36));

  tmp_448 <= tmp_397 - tmp_447;

  tmp_449 <= tmp_446 * tmp_448;

  tmp_450 <= resize(tmp_449, 67);

  tmp_451 <= tmp_441 + tmp_450;

  tmp_452 <= resize(tmp_451 & '0', 69);

  tmp_453 <= tmp_154 * q1_unsigned;

  tmp_454 <= signed(resize(tmp_453, 31));

  multiplier_cast_25 <= signed(resize(q3_unsigned, 15));
  multiplier_mul_temp_25 <= tmp_77 * multiplier_cast_25;
  tmp_455 <= multiplier_mul_temp_25(27 DOWNTO 0);

  tmp_456 <= resize(tmp_455 & '0', 31);

  tmp_457 <= tmp_454 + tmp_456;

  tmp_458 <= signed(resize(my_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 34));

  tmp_459 <= tmp_410 - tmp_458;

  tmp_460 <= tmp_457 * tmp_459;

  tmp_461 <= resize(tmp_460, 69);

  tmp_462 <= tmp_452 + tmp_461;

  tmp_463 <= resize(tmp_462, 70);

  tmp_464 <= tmp_154 * q0_unsigned;

  tmp_465 <= signed(resize(tmp_464, 29));

  tmp_466 <= resize(tmp_465, 31);

  multiplier_cast_26 <= signed(resize(q2_unsigned, 15));
  multiplier_mul_temp_26 <= tmp_299 * multiplier_cast_26;
  tmp_467 <= multiplier_mul_temp_26(27 DOWNTO 0);

  tmp_468 <= resize(tmp_467 & '0' & '0', 31);

  tmp_469 <= tmp_466 - tmp_468;

  tmp_470 <= signed(resize(mz_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 38));

  tmp_471 <= tmp_424 - tmp_470;

  tmp_472 <= tmp_469 * tmp_471;

  tmp_473 <= resize(tmp_472, 70);

  tmp_474 <= tmp_463 + tmp_473;

  tmp_475 <= tmp_474(58 DOWNTO 45);

  r2_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      r2_tmp <= to_signed(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r2_tmp <= tmp_475;
      END IF;
    END IF;
  END PROCESS r2_reg_process;


  r2 <= std_logic_vector(r2_tmp);

  
-- 'Madgwick_correction_fixpt:44' r3 = fi(v2q1 * (fi_signed(fi_signed(fi(2.0, 0, 2, 0, fm) * q1q3) - v2q0q2) - ax) 
  
-- + v2q2 * (fi_signed(fi(2.0, 0, 2, 0, fm) * q0q1 + v2q2q3) - ay) + (fi_uminus(v4bx) * q3 + v2bz * q1) * (fi_signed(v2bx 
  
-- * (fi_signed(fi_signed(fi(0.5, 0, 14, 14, fm)) - q2q2) - q3q3) + v2bz * (fi_signed(q1q3) - q0q2)) - mx) + (fi_uminus(v2bx) 
  
-- * q0 + v2bz * q2) * (fi_signed(v2bx * (fi_signed(q1q2) - q0q3) + v2bz * (q0q1 + q2q3)) - my) + v2bx * q1 * (fi_signed(v2bx 
  
-- * (q0q2 + q1q3) + v2bz * (fi_signed(fi_signed(fi(0.5, 0, 14, 14, fm)) - q1q1) - q2q2)) - mz), 1, 14, 7, fm)
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:62' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:63' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:64' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:65' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:66' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:62' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:63' if isfi( a )
  -- 
  -- 'Madgwick_correction_fixpt:64' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:65' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:66' y = -fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:52' nt = numerictype( a );
  -- 
  -- 'Madgwick_correction_fixpt:53' new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
  -- 
  -- 'Madgwick_correction_fixpt:54' y = fi( a, new_nt, fimath( a ) );
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  -- 
  -- 'Madgwick_correction_fixpt:50' coder.inline( 'always' );
  -- 
  -- 'Madgwick_correction_fixpt:51' if isfi( a ) && ~(issigned( a ))
  -- 
  -- 'Madgwick_correction_fixpt:55' else
  -- 
  -- 'Madgwick_correction_fixpt:56' y = a;
  tmp_476 <= resize(tmp_3 & '0', 16);

  tmp_477 <= signed(resize(tmp_476, 17));

  tmp_478 <= resize(tmp_477, 19);

  tmp_479 <= signed(resize(tmp_9 & '0', 19));

  tmp_480 <= tmp_478 - tmp_479;

  tmp_481 <= resize(tmp_480, 21);

  tmp_482 <= signed(resize(ax_unsigned, 21));

  tmp_483 <= tmp_481 - tmp_482;

  tmp_484 <= resize(tmp_16 & '0', 16);

  tmp_485 <= resize(tmp_484, 17);

  tmp_486 <= resize(tmp_21 & '0', 17);

  tmp_487 <= tmp_485 + tmp_486;

  tmp_488 <= signed(resize(tmp_487, 18));

  tmp_489 <= resize(tmp_488, 20);

  tmp_490 <= signed(resize(ay_unsigned, 20));

  tmp_491 <= tmp_489 - tmp_490;

  tmp_492 <= signed(resize(tmp_380, 15));

  p784tmp_cast <= resize(tmp_492, 16);
  p784tmp_cast_1 <=  - (p784tmp_cast);
  tmp_493 <= p784tmp_cast_1(14 DOWNTO 0);

  tmp_494 <= signed(resize(tmp_45, 17));

  tmp_495 <= to_signed(16#02000#, 17) - tmp_494;

  tmp_496 <= resize(tmp_495, 19);

  tmp_497 <= signed(resize(tmp_47, 19));

  tmp_498 <= tmp_496 - tmp_497;

  tmp_499 <= signed(resize(tmp_3, 15));

  tmp_500 <= resize(tmp_499, 17);

  tmp_501 <= signed(resize(tmp_163, 17));

  tmp_502 <= tmp_500 - tmp_501;

  multiplier_cast_27 <= signed(resize(tmp_154, 15));
  multiplier_mul_temp_27 <= multiplier_cast_27 * tmp_498;
  tmp_503 <= multiplier_mul_temp_27(32 DOWNTO 0);

  tmp_504 <= resize(tmp_503, 34);

  tmp_505 <= tmp_77 * tmp_502;

  tmp_506 <= resize(tmp_505 & '0', 34);

  tmp_507 <= tmp_504 + tmp_506;

  tmp_508 <= resize(tmp_507, 36);

  tmp_509 <= signed(resize(tmp_154, 15));

  p779tmp_cast <= resize(tmp_509, 16);
  p779tmp_cast_1 <=  - (p779tmp_cast);
  tmp_510 <= p779tmp_cast_1(14 DOWNTO 0);

  tmp_511 <= signed(resize(tmp_175, 15));

  tmp_512 <= resize(tmp_511, 17);

  tmp_513 <= signed(resize(tmp_179, 17));

  tmp_514 <= tmp_512 - tmp_513;

  tmp_515 <= resize(tmp_16, 15);

  tmp_516 <= resize(tmp_184, 15);

  tmp_517 <= tmp_515 + tmp_516;

  multiplier_cast_28 <= signed(resize(tmp_154, 15));
  multiplier_mul_temp_28 <= multiplier_cast_28 * tmp_514;
  tmp_518 <= multiplier_mul_temp_28(30 DOWNTO 0);

  tmp_519 <= resize(tmp_518, 32);

  multiplier_cast_29 <= signed(resize(tmp_517, 16));
  multiplier_mul_temp_29 <= tmp_77 * multiplier_cast_29;
  tmp_520 <= multiplier_mul_temp_29(28 DOWNTO 0);

  tmp_521 <= resize(tmp_520 & '0', 32);

  tmp_522 <= tmp_519 + tmp_521;

  tmp_523 <= resize(tmp_522, 34);

  tmp_524 <= resize(tmp_163, 15);

  tmp_525 <= resize(tmp_3, 15);

  tmp_526 <= tmp_524 + tmp_525;

  tmp_527 <= signed(resize(tmp_42, 17));

  tmp_528 <= to_signed(16#02000#, 17) - tmp_527;

  tmp_529 <= resize(tmp_528, 19);

  tmp_530 <= signed(resize(tmp_45, 19));

  tmp_531 <= tmp_529 - tmp_530;

  tmp_532 <= tmp_154 * tmp_526;

  tmp_533 <= signed(resize(tmp_532, 36));

  tmp_534 <= tmp_77 * tmp_531;

  tmp_535 <= resize(tmp_534 & '0', 36);

  tmp_536 <= tmp_533 + tmp_535;

  tmp_537 <= resize(tmp_536, 38);

  multiplier_cast_30 <= signed(resize(tmp_14, 15));
  multiplier_mul_temp_30 <= multiplier_cast_30 * tmp_483;
  tmp_538 <= multiplier_mul_temp_30(34 DOWNTO 0);

  tmp_539 <= resize(tmp_538, 36);

  multiplier_cast_31 <= signed(resize(tmp_1, 15));
  multiplier_mul_temp_31 <= multiplier_cast_31 * tmp_491;
  tmp_540 <= multiplier_mul_temp_31(33 DOWNTO 0);

  tmp_541 <= resize(tmp_540, 36);

  tmp_542 <= tmp_539 + tmp_541;

  tmp_543 <= resize(tmp_542 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 67);

  multiplier_cast_32 <= signed(resize(q3_unsigned, 15));
  multiplier_mul_temp_32 <= tmp_493 * multiplier_cast_32;
  tmp_544 <= multiplier_mul_temp_32(28 DOWNTO 0);

  tmp_545 <= resize(tmp_544, 30);

  multiplier_cast_33 <= signed(resize(q1_unsigned, 15));
  multiplier_mul_temp_33 <= tmp_77 * multiplier_cast_33;
  tmp_546 <= multiplier_mul_temp_33(27 DOWNTO 0);

  tmp_547 <= resize(tmp_546, 30);

  tmp_548 <= tmp_545 + tmp_547;

  tmp_549 <= signed(resize(mx_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 36));

  tmp_550 <= tmp_508 - tmp_549;

  tmp_551 <= tmp_548 * tmp_550;

  tmp_552 <= resize(tmp_551, 67);

  tmp_553 <= tmp_543 + tmp_552;

  tmp_554 <= resize(tmp_553 & '0', 69);

  multiplier_cast_34 <= signed(resize(q0_unsigned, 15));
  multiplier_mul_temp_34 <= tmp_510 * multiplier_cast_34;
  tmp_555 <= multiplier_mul_temp_34(28 DOWNTO 0);

  tmp_556 <= resize(tmp_555, 30);

  multiplier_cast_35 <= signed(resize(q2_unsigned, 15));
  multiplier_mul_temp_35 <= tmp_77 * multiplier_cast_35;
  tmp_557 <= multiplier_mul_temp_35(27 DOWNTO 0);

  tmp_558 <= resize(tmp_557 & '0', 30);

  tmp_559 <= tmp_556 + tmp_558;

  tmp_560 <= signed(resize(my_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 34));

  tmp_561 <= tmp_523 - tmp_560;

  tmp_562 <= tmp_559 * tmp_561;

  tmp_563 <= resize(tmp_562, 69);

  tmp_564 <= tmp_554 + tmp_563;

  tmp_565 <= resize(tmp_564, 70);

  tmp_566 <= tmp_154 * q1_unsigned;

  tmp_567 <= signed(resize(mz_unsigned & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
    '0', 38));

  tmp_568 <= tmp_537 - tmp_567;

  multiplier_cast_36 <= signed(resize(tmp_566, 29));
  multiplier_mul_temp_36 <= multiplier_cast_36 * tmp_568;
  tmp_569 <= multiplier_mul_temp_36(65 DOWNTO 0);

  tmp_570 <= resize(tmp_569, 70);

  tmp_571 <= tmp_565 + tmp_570;

  tmp_572 <= tmp_571(58 DOWNTO 45);

  r3_reg_process : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      r3_tmp <= to_signed(16#0000#, 14);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r3_tmp <= tmp_572;
      END IF;
    END IF;
  END PROCESS r3_reg_process;


  r3 <= std_logic_vector(r3_tmp);

  ce_out <= clk_enable;

END rtl;

